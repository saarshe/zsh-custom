#!/bin/zsh

# Git Garbage Collection Script

# Exit if not inside a Git repository
if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
  echo "‚ùå Error: This is not a Git repository."
  exit 1
fi

echo "üîÑ Fetching and pruning stale remote references..."
git fetch --prune > /dev/null 2>&1

echo "üßπ Pruning stale remote-tracking branches for 'origin'..."
git remote prune origin > /dev/null 2>&1
echo "‚úÖ Remote pruning complete."

# Find local branches that are tracking deleted remote branches
stale_branches=($(git branch -vv | grep ': gone]' | awk '{print $1}' | sed 's/^\*//'))

if [[ ${#stale_branches[@]} -gt 0 ]]; then
  echo "üö® The following local branches no longer track a remote:"
  for branch in "${stale_branches[@]}"; do
    echo "  - $branch"
  done
  echo

  for branch in "${stale_branches[@]}"; do
    echo -n "‚ùì Force delete '$branch'? [y/N]: "
    read -r confirmation
    if [[ $confirmation =~ ^[Yy]$ ]]; then
      git branch -D "$branch"
    else
      echo "‚è≠Ô∏è Skipped '$branch'."
    fi
  done
else
  echo "‚úÖ No stale local branches found."
fi